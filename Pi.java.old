import java.util.concurrent.*;
import java.util.*;

public class Pi
{
	public static void main(String... args)
	{
		List<Future<Double>> list = new ArrayList<Future<Double>>();
		ExecutorService pool = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());

		for(int i=0;i<100000;i++)
		{
			final int j=i;
			list.add(pool.submit(new Callable<Double>()
			{
				public Double call()
				{
					return Math.pow(-1,j)/(2*j+1);
				}
			}));
		}

		pool.shutdown();

		double sum = 0;
		for(Future<Double> f:list)
		{
			try
			{
				sum += f.get();
			}
			catch(Exception ex)
			{
			}
		}
		sum *= 4;

		System.out.println(sum);
	}
}

